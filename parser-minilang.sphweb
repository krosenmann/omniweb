=================
Парсинг исходника
=================

Представление чанка
===================

Распрашенный исходный код - это дерево, каждый лист которого -
чанк. Для создания чанка задаются:
* имя
* :ref:`блок содержимого <_rect>`
* список имен всех использованных дочерних чанков
* тип (файл или нет)
* путь к файлу, в котором чанк был определен.

Так же для проверки на сиротство используется дополнительное
поле. Оно не используется при создании чанка, а только во время
генерации кода. Подробнее об этом анализе можно прочитать :ref:`здесь <_orphan>`.

Список использованных блоков не содержит прямых ссылок на другие
объекты, а только имена.

@(parser.lisp@) = lisp
(defstruct chunk
  name
  code
  rectangles
  is-file?
  source
  has-parent?)

(defvar *warehouse* (make-hash-table  :test 'equal))

(defvar *files-warehouse* (make-hash-table :test 'equal))

(defun get-chunk (name &key from)
  (gethash name from))

(defmacro create-chunk (&rest initlist)
  `(let ((curchunk (apply #'make-chunk (list ,@initlist))))
    (setf (gethash (chunk-name curchunk) (if (chunk-is-file? curchunk)
                                     *files-warehouse*
                                     *warehouse*))
          curchunk)))
@


.. _rect:
Блок (rectange)
===============

.. _orphan
Сиротские чанки
===============
